name: CI/CD Deploy simplecrud          # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ GitHub Actions)

on:
  push:
    branches: [ "main" ]               # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—É—à–µ –≤ –≤–µ—Ç–∫—É main

env:
  IMAGE_NAME: almuko/simplecrud        # –ò–º—è Docker-–æ–±—Ä–∞–∑–∞ –≤ Docker Hub

jobs:
  build-and-push:                      # –î–∂–æ–±: —Å–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞
    runs-on: ubuntu-latest             # –ó–∞–ø—É—Å–∫ –Ω–∞ GitHub-hosted runner (Ubuntu)
    steps:
      - name: Checkout code
        uses: actions/checkout@v3      # –ó–∞–±–∏—Ä–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

      - name: Log in to Docker Hub
        uses: docker/login-action@v2   # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .                        # –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–±–æ—Ä–∫–∏ ‚Äî —Ç–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞
          push: true                        # –ü—É–±–ª–∏–∫—É–µ–º –æ–±—Ä–∞–∑ –≤ Docker Hub
          tags: |                           # –ù–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–≥–æ–≤
            ${{ env.IMAGE_NAME }}:latest    # latest (–¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
            ${{ env.IMAGE_NAME }}:${{ github.sha }}  # —Ç–µ–≥ –ø–æ SHA –∫–æ–º–º–∏—Ç–∞ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π)

  deploy:                                  # –î–∂–æ–±: –¥–µ–ø–ª–æ–π –≤ Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push                  # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3          # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞–º)

      - name: Install kubectl
        uses: azure/setup-kubectl@v4       # –°—Ç–∞–≤–∏–º kubectl
        with:
          version: latest

      - name: Setup Kubeconfig
        shell: bash
        run: |                             # –°–æ–∑–¥–∞—ë–º kubeconfig –∏–∑ GitHub Secrets
          mkdir -p "$HOME/.kube"
          cat > "$HOME/.kube/config" <<'EOF'
          ${{ secrets.KUBECONFIG }}
          EOF

      - name: Update image tag in manifest
        run: |                             # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º SHA –≤ simplecrud.yaml
          sed -i "s|\${IMAGE_TAG}|${{ github.sha }}|g" k8s/simplecrud.yaml

      - name: Install cert-manager
        run: |                             # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cert-manager –¥–ª—è TLS
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.18.2/cert-manager.yaml
          kubectl rollout status deployment/cert-manager -n cert-manager --timeout=180s

      - name: Deploy ClusterIssuer (Let's Encrypt)
        run: kubectl apply --validate=false -f k8s/cluster-issuer.yaml

      - name: Deploy Postgres (only if not exists)
        run: |                             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ StatefulSet postgres
          if ! kubectl get statefulset postgres -n default >/dev/null 2>&1; then
            echo "Postgres not found. Creating..."
            kubectl apply -f k8s/postgres.yaml
            kubectl rollout status statefulset/postgres -n default --timeout=180s
          else
            echo "‚úÖ Postgres already exists. Skipping creation."
          fi

      - name: Recreate simplecrud-db-secret
        run: |                             # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∫—Ä–µ—Ç —Å DATABASE_URL
          kubectl delete secret simplecrud-db-secret -n default --ignore-not-found
          kubectl create secret generic simplecrud-db-secret \
            --from-literal=DATABASE_URL='postgres://postgres:Zxcvbnm123@postgres:5432/simplecrud?sslmode=disable'

      - name: Cleanup old migration job and pods
        run: |                             # –ß–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–π Job –º–∏–≥—Ä–∞—Ü–∏–π –∏ Pod'—ã
          if kubectl get job simplecrud-migrate -n default >/dev/null 2>&1; then
            echo "üóë Deleting old migration job..."
            kubectl delete job simplecrud-migrate -n default
          fi
          echo "üßπ Cleaning up old migration pods..."
          for pod in $(kubectl get pods -n default -l job-name=simplecrud-migrate -o jsonpath='{.items[*].metadata.name}'); do
            kubectl delete pod -n default $pod --ignore-not-found || true
          done

      - name: Run migrations Job
        run: |                             # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
          kubectl apply -f k8s/migrate.yaml
          echo "‚è≥ Waiting for migrations to complete..."
          if ! kubectl wait --for=condition=complete job/simplecrud-migrate -n default --timeout=600s; then
            echo "‚ùå Migration job did not complete. Showing logs from all pods..."
            for pod in $(kubectl get pods -n default -l job-name=simplecrud-migrate -o jsonpath='{.items[*].metadata.name}'); do
              echo "üîπ Logs from pod: $pod"
              kubectl logs -n default $pod || true
              echo "--------------------------------------"
            done
            exit 1
          fi
          echo "‚úÖ Migration job completed successfully."
          kubectl delete job simplecrud-migrate -n default --ignore-not-found

      - name: Deploy App (Deployment + Service + Ingress)
        run: kubectl apply -f k8s/simplecrud.yaml

      - name: Wait for app rollout
        run: kubectl rollout status deployment/simplecrud -n default --timeout=180s

      - name: Wait for TLS certificate
        run: |                             # –ñ–¥—ë–º –≤—ã–ø—É—Å–∫ TLS-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
          echo "‚è≥ Waiting for TLS certificate simplecrud-tls..."
          kubectl wait --for=condition=Ready certificate/simplecrud-tls -n default --timeout=300s || \
            (echo "‚ùå TLS certificate was not issued" && kubectl describe certificate/simplecrud-tls -n default && exit 1)

      - name: Debug simplecrud pods if rollout fails
        if: failure()                      # –ï—Å–ª–∏ –¥–µ–ø–ª–æ–π —É–ø–∞–ª ‚Äî –≤—ã–≤–æ–¥–∏–º –ª–æ–≥–∏
        run: |
          kubectl get pods -n default
          for pod in $(kubectl get pods -n default -l app=simplecrud -o jsonpath='{.items[*].metadata.name}'); do
            echo "Logs from $pod"
            kubectl logs -n default $pod --tail=50 || true
            echo "---"
          done

      - name: Test API health endpoint
        run: |                             # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
          echo "üåç Testing API endpoint..."
          curl -vk --retry 5 --retry-delay 10 https://simplecrud.compnet.kz/health | grep '"status":"ok"'

      - name: Show Ingress and endpoints
        run: |                             # –û—Ç–ª–∞–¥–∫–∞: –≤—ã–≤–æ–¥–∏–º ingress, —Å–µ—Ä–≤–∏—Å—ã, pod'—ã
          kubectl get ingress -n default
          kubectl get svc -n default
          kubectl get pods -o wide -n default
